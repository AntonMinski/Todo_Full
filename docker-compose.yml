version: "3.7"
services:
  backend:
    container_name: nestjsserver
    build:  # means: user this.Dockerfile
      context: ./task
      dockerfile: ../task/Dockerfile
    image: nest
    env_file:
    - ./task/.env
    ports: 
      - 8000:3000 # 8000-localhost port, 3000-container localhost port
    volumes: 
      - ./task:/app  # to reflect change from app to container
    depends_on: 
      - db # means, that db executed 1-st, than the container
   
  frontend:
        container_name: client
        build:
            context: ./task-frontend
            dockerfile: Dockerfile
        image: react
        ports:
            - "3000:3000"
        volumes:
            - ./task-frontend:/app
        depends_on: 
          - backend

  nginx:
        build:
          context: ./nginx
          dockerfile: Dockerfile
        container_name: nginx
        hostname: nginx
        ports:
            - "80:80" 
        depends_on:
            - backend

  db: 
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - "35000:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: ${NODE_ENV_DATABASE_USER} 
      POSTGRES_PASSWORD: ${NODE_ENV_DATABASE_PASSWORD} 
      POSTGRES_DB: ${NODE_ENV_DATABASE_NAME}
      # POSTGRES_PORT: ${NODE_ENV_DATABASE_PORT}
      
    volumes: 
      
      - .task/pgdata:/var/lib/postgresql/data \
            # copy the sql script to create tables
      # - ./task/src/config/start-db.sh:/docker-entrypoint-initdb.d/start-db.sh

  

      
    